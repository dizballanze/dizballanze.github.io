<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tech blog by @dizballanze - БД</title><link href="/ru/" rel="alternate"></link><link href="http://dizballanze.com/feeds/bd.atom.xml" rel="self"></link><id>/ru/</id><updated>2011-01-29T18:42:00+03:00</updated><entry><title>MySQL - обзор типов таблиц</title><link href="/ru/mysql-obzor-tipov-tablits/" rel="alternate"></link><published>2011-01-29T18:42:00+03:00</published><updated>2011-01-29T18:42:00+03:00</updated><author><name>Admin</name></author><id>tag:None,2011-01-29:/ru/mysql-obzor-tipov-tablits/</id><summary type="html">&lt;p&gt;&lt;img alt="mysql" src="/media/2011/01/mysql-125x125.png" title="MySQL logo"/&gt;&lt;/p&gt;
&lt;p&gt;Здравствуйте, сегодня мы поговорим о типах таблиц в MySQL. Архитектура
MySQL позволяет подключать разные движки таблиц. На данный момент MySQL
поддерживает множество различных типов таблиц, каждый из которых имеет
свои преимущества и недостатки. Я перечислю и коротко опишу основные
типы таблиц, а затем проведу небольшой тест производительности наиболее
часто используемых …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="mysql" src="/media/2011/01/mysql-125x125.png" title="MySQL logo"/&gt;&lt;/p&gt;
&lt;p&gt;Здравствуйте, сегодня мы поговорим о типах таблиц в MySQL. Архитектура
MySQL позволяет подключать разные движки таблиц. На данный момент MySQL
поддерживает множество различных типов таблиц, каждый из которых имеет
свои преимущества и недостатки. Я перечислю и коротко опишу основные
типы таблиц, а затем проведу небольшой тест производительности наиболее
часто используемых типов - myisam и innodb.&lt;/p&gt;
&lt;p&gt;Для того что-бы посмотреть какие типы поддерживает ваша инсталляция
MySQL необходимо выполнить следующий SQL запрос:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::sql
SHOW ENGINES;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В результате вы получаете таблицу содержащую информацию о том какие типы
таблиц установлены в вашей системе и краткое описание их возможностей.&lt;/p&gt;
&lt;p&gt;Engine             | Support | Comment | Transactions | XA   | Savepoints
:------------------|:--------|:--------|:-------------|:-----|:-----------
FEDERATED          | NO      | Federated MySQL storage engine | NULL         | NULL | NULL CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO       &lt;br/&gt;
MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO       &lt;br/&gt;
BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO       &lt;br/&gt;
MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO       &lt;br/&gt;
MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO       &lt;br/&gt;
ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO       &lt;br/&gt;
InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES      &lt;br/&gt;
PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO&lt;/p&gt;
&lt;p&gt;Нас в основном будет интересовать столбец support, который содержит
информацию о поддержке типа таблицы и может принимать значения: NO - не
поддерживается, YES - поддерживается, DEFAULT -используется
по-умолчанию. Начиная с версии 5.5.5 по-умолчанию выбран тип innodb,
ранее стандартным типом был myisam.&lt;/p&gt;
&lt;p&gt;В версии MySQL 5.5 поддерживается 9 различных типов таблиц.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;InnoDB&lt;/strong&gt; - движок с поддержкой транзакций, откатов и защитой от
    потери данных. В данном типе таблиц используются блокировки на
    уровне записи и не блокирующее чтение, что позволило улучшить
    производительность при многопользовательском режиме работы. InnoDB
    сохраняет пользовательские данные в кластерных индексах, что
    позволяет компенсировать в/в для простых запросов основанных на
    первичных ключах.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MyISAM&lt;/strong&gt; - движок таблиц MySQL используемый в основном в
    Web-приложениях, хранилищах данных и других программных средах.
    Данный тип таблиц поддерживается всеми инсталляциями MySQL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt; - хранит данные в оперативной памяти для очень быстрого
    доступа. Также известен как HEAP (куча).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Merge&lt;/strong&gt; - используется для логического объединения одинаковых
    MyISAM таблиц и обращение к ним, как к единому объекту. Хорошо
    подойдет для очень больших хранилищ данных.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Archive&lt;/strong&gt; - идеальное решение для хранения больших объёмов
    информации, к которой не требуется частый доступ.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Federated&lt;/strong&gt; - предоставляет возможность объединять различные MySQL
    сервера для создания одной логической базы данных из нескольких
    физических машин. Идеально подойдет для архитектур, которые
    поддерживают распределенное хранение данных.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSV&lt;/strong&gt; - хранит пользовательские данные в текстовых файлах разделяя
    значения запятыми. Используется если необходим простой обмен с
    приложениями, которые умеют экспортировать/импортировать данные из
    CSV формата.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Blackhole&lt;/strong&gt; - принимает, но не возвращает никаких данных.
    Результатами любых запросов из таких хранилищ будут пустые выборки.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt; - тестовый движок, не выполняет никаких функций, будет
    полезен только разработчикам, которые собираются писать свой движок,
    в качестве примера.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Сравнительная таблица основных типов таблиц&lt;/p&gt;
&lt;p&gt;Функция | MyISAM | Memory | InnoDB | Archive
:-------|:-------|:-------|:-------|:-------
Максимальный объём хранимых данных | 256TB | RAM | 64TB | Нет
Транзакции | Нет | Нет | Да | Нет
Блокировки | Таблица | Таблица | Запись | Запись
MVCC | Нет | Нет | Да | Нет
B-деревья | Да | Да | Да | Нет
Хэш индексы | Нет | Да | Нет | Нет
Индексы полнотекстового поиска | Да | Нет | Нет | Нет
Кластерные индексы | Нет | Нет | Да | Нет
Кэширование данных | Нет | Н/д | Да | Нет
Кэширование индексов | Да | Н/д | Да | Нет
Сжатие данных | Да | Нет | Да | Да
Шифрование данных | Да | Да | Да | Да
Поддержка кластерных БД | Нет | Нет | Нет | Нет
Репликация | Да | Да | Да | Да
Внешние ключи | Нет | Нет | Да | Нет
Бэкап | Да | Да | Да | Да
Кэширование запросов | Да | Да | Да | Да&lt;/p&gt;
&lt;h2 id="testirovanie-proizvoditelnost-innodb-i-myiasm"&gt;Тестирование производительность InnoDB и MyIASM&lt;/h2&gt;
&lt;p&gt;Наибольший интерес для web-разработчика составляют innodb и myisam.
Сейчас мы проведем сравнительный тест производительности этих типов
таблиц. Для этого сначала создадим две одинаковые по структуре таблицы,
но с разным типом движка хранения:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::sql
CREATE TABLE `inno` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `data` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB;

CREATE TABLE `myisam` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `data` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Напишем небольшой скрипт который будет выполнять 3 теста: запись данных
(insert), выборка по ключу, выборка по не ключевому полю.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:::php
&amp;lt;?php
// ...
class timer{
    public $value=0;

    public function start(){
        $this-&amp;gt;value = microtime(true);
    }

    public function end(){
        return microtime(true) - $this-&amp;gt;value;
    }
}

$timer = new timer();

mysql_connect('localhost','root');
mysql_select_db('test');

$data = array();
$select_query = 'SELECT data FROM myisam WHERE id = :val:';
for ($i = 0; $i &amp;lt;= 10000; $i++){
    $result = mysql_query(str_replace(':val:', $i, $select_query));
    $tmp = mysql_fetch_array($result);
    $data[] = $tmp[0];
}

echo '&amp;lt;br/&amp;gt;MyISAM select&amp;lt;br/&amp;gt;';
$select_query = 'SELECT * FROM myisam WHERE data = :val:';
$timer-&amp;gt;start();
foreach ($data as $one){
    mysql_query(str_replace(':val:', $one, $select_query));
}
echo $timer-&amp;gt;end() . ' s&amp;lt;br/&amp;gt;';

echo '&amp;lt;br/&amp;gt;InnoDB select&amp;lt;br/&amp;gt;';
$select_query = 'SELECT * FROM inno WHERE data = :val:';
$timer-&amp;gt;start();
foreach ($data as $one){
    mysql_query(str_replace(':val:', $one, $select_query));
}
echo $timer-&amp;gt;end() . ' s&amp;lt;br/&amp;gt;';

/*

$data = array();
for ($i = 0; $i &amp;lt;= 10000; $i++){
    $data[] = mt_rand(0, 100500);
}

echo '&amp;lt;br/&amp;gt;MyISAM select by key&amp;lt;br/&amp;gt;';
$select_query = 'SELECT * FROM myisam WHERE id = :val:';
$timer-&amp;gt;start();
for ($i = 0; $i &amp;lt;= 10000; $i++){
    mysql_query(str_replace(':val:', $i, $select_query));
}
echo $timer-&amp;gt;end() . ' s&amp;lt;br/&amp;gt;';

echo '&amp;lt;br/&amp;gt;InnoDB select by key&amp;lt;br/&amp;gt;';
$select_query = 'SELECT * FROM inno WHERE id = :val:';
$timer-&amp;gt;start();
for ($i = 0; $i &amp;lt;= 10000; $i++){
    mysql_query(str_replace(':val:', $i, $select_query));
}
echo $timer-&amp;gt;end() . ' s&amp;lt;br/&amp;gt;';
*/

/*

$data = array();
for ($i = 0; $i &amp;lt;= 10000; $i++){
    $data[] = mt_rand(0, 100500);
}

echo '&amp;lt;br/&amp;gt;MyISAM insert&amp;lt;br/&amp;gt;';
$insert_query = 'INSERT INTO myisam VALUES (NULL,\':val:\')';
$timer-&amp;gt;start();
foreach ($data as $one){
    mysql_query(str_replace(':val:', $one, $insert_query));
}
echo $timer-&amp;gt;end() . ' s&amp;lt;br/&amp;gt;';

echo 'InnoDB insert&amp;lt;br/&amp;gt;';
$insert_query = 'INSERT INTO inno VALUES (NULL,\':val:\')';
$timer-&amp;gt;start();
foreach ($data as $one){
    mysql_query(str_replace(':val:', $one, $insert_query));
}
echo $timer-&amp;gt;end() . ' s&amp;lt;br/&amp;gt;';
 */
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Для того что-бы выполнить тест, нужно раскоментить один соответствующий
блок кода. И собственно, то что у меня получилось в результате
тестирования:&lt;/p&gt;
&lt;p&gt;Тест                         | InnoDB    | MyISAM
:----------------------------|:----------|:--------
Вставка данных(insert)       | 15.697 с  | 1.591 с
Выборка по ключу             | 1.678 с   | 1.603 с
Выборка по не ключевому полю | 149.961 c | 95.984 c&lt;/p&gt;
&lt;p&gt;Как мы видим myisam работает значительно быстрее, особенно это заметно
при вставке данных. Хотя innodb и дает ряд новых возможностей и
преимуществ, такая медлительность не позволяет ему конкурировать с
myisam, особенно в web-приложениях.&lt;/p&gt;</content><category term="benchmark"></category><category term="innodb"></category><category term="myisam"></category><category term="MySQL"></category><category term="БД"></category></entry></feed>