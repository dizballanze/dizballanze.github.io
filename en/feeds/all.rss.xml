<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Tech blog by @dizballanze</title><link>/en/</link><description></description><lastBuildDate>Thu, 29 Jun 2017 17:02:00 +0300</lastBuildDate><item><title>Django project optimization guide (part 2)</title><link>/en/django-project-optimization-part-2/</link><description>&lt;p&gt;Table of Contents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#mass-edit"&gt;Mass edit&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#mass-insertion"&gt;Mass insertion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mass-m2m-insertion"&gt;Mass M2M insertion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mass-update"&gt;Mass update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mass-delete"&gt;Mass delete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#iterator_1"&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#foreign-keys"&gt;Foreign keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#retrieving-of-related-objects"&gt;Retrieving of related objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#defer-fields-retrieving"&gt;Defer fields retrieving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-indexes"&gt;Database indexes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lenqs-vs-qscount"&gt;len(qs) vs qs.count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#count vs exists"&gt;count vs exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Lazy QuerySet"&gt;Lazy QuerySet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the second part of Django project optimization series. The first part was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yuri Shikanov</dc:creator><pubDate>Thu, 29 Jun 2017 17:02:00 +0300</pubDate><guid isPermaLink="false">tag:None,2017-06-29:/en/django-project-optimization-part-2/</guid><category>python</category><category>django</category></item><item><title>Оптимизация производительности Django проектов (часть 2)</title><link>/en/../ru/django-project-optimization-part-2/</link><description>&lt;p&gt;Содержание:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#massovye-izmeneniia"&gt;Массовые изменения&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#massovaia-vstavka"&gt;Массовая вставка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#massovaia-vstavka-m2m"&gt;Массовая вставка M2M&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#massovoe-izmenenie"&gt;Массовое изменение&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#massovoe-udalenie-obektov"&gt;Массовое удаление объектов&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#iterator_1"&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ispolzovanie-vneshnikh-kliuchei"&gt;Использование внешних ключей&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#poluchenie-sviazannykh-obektov"&gt;Получение связанных объектов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ogranichenie-polei-v-vyborkakh"&gt;Ограничение полей в выборках&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#indeksy-bd"&gt;Индексы БД&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lenqs-vs-qscount"&gt;len(qs) vs qs.count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#count-vs-exists"&gt;count vs exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lenivyi-queryset"&gt;Ленивый QuerySet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Это продолжение серии статей про оптимизацию Django приложений. Первая часть доступна
&lt;a href="/ru/django-project-optimization-part-1/"&gt;здесь&lt;/a&gt; и рассказывает …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yuri Shikanov</dc:creator><pubDate>Tue, 27 Jun 2017 16:00:00 +0300</pubDate><guid isPermaLink="false">tag:None,2017-06-27:/en/../ru/django-project-optimization-part-2/</guid><category>python</category><category>django</category></item><item><title>Django project optimization guide (part 1)</title><link>/en/django-project-optimization-part-1/</link><description>&lt;p&gt;Django is a powerful framework used in many great projects. It provides many batteries, that speed up development and
therefore reduces the price of it. When a project becomes large and is used by many users you inevitably will run
into performance problems. In this guide, I will try define …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Admin</dc:creator><pubDate>Wed, 14 Jun 2017 16:47:00 +0300</pubDate><guid isPermaLink="false">tag:None,2017-06-14:/en/django-project-optimization-part-1/</guid><category>python</category><category>django</category><category>performance</category><category>load testing</category></item><item><title>Оптимизация производительности Django проектов (часть 1)</title><link>/en/../ru/django-project-optimization-part-1/</link><description>&lt;p&gt;Django это мощный фреймворк используемый в множестве отличных проектов. Из коробки в нем включено много полезных
батареек, которые значительно ускоряют разработку и соответственно уменьшают ее стоимость. Однако, когда проект
растет и набирает аудиторию, вы неизбежно столкнетесь с проблемами производительности. В этом посте я попробую
рассказать о том с какими проблемами …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Admin</dc:creator><pubDate>Wed, 14 Jun 2017 16:47:00 +0300</pubDate><guid isPermaLink="false">tag:None,2017-06-14:/en/../ru/django-project-optimization-part-1/</guid><category>python</category><category>django</category><category>performance</category><category>load testing</category></item></channel></rss>